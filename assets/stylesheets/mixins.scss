@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

/* When setting box-sizing: border-box; when you apply a border and padding 
 * to that element that value combined is part of the width set. So if you 
 * have a 1px border, 5px padding and width of 100px, you're rendered width 
 * remains at 100px but the default setting (content-box) the border and 
 * padding are applied on top of the width so the actual rendered width in 
 * that example would be 112px (1px + 1px + 5px + 5px).
 * http://css-tricks.com/box-sizing/
 */
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

@mixin vertical-gradient($startColor, $endColor) {
  background-color: $endColor;
  background-image: -moz-linear-gradient(top, $startColor, $endColor); /* FF 3.6+ */
  background-image: -ms-linear-gradient(top, $startColor, $endColor); /* IE10 */
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); /* Safari 4+, Chrome 2+ */
  background-image: -webkit-linear-gradient(top, $startColor, $endColor); /* Safari 5.1+, Chrome 10+ */
  background-image: -o-linear-gradient(top, $startColor, $endColor); /* Opera 11.10 */
  background-image: linear-gradient(top, $startColor, $endColor); /* W3C */
  background-repeat: repeat-x;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0); /* IE6-9 */
}